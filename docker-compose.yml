version: '3.8'

services:
  api-gateway:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  
  userservice:
    image: userservice:latest
    environment:
      FLASK_APP: app/__init__.py
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      DATABASE_HOST: userdb
      DATABASE_PORT: 5432
      DATABASE_NAME: mydatabase
    volumes:
      - ./private_key.pem:/app/private_key.pem
    deploy:
      replicas: 2
      labels:
        - "traefik.http.routers.userservice.rule=PathPrefix(`/auth/`)"
        - "traefik.http.services.userservice.loadbalancer.server.port=5001"

  userdb:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - userdb_data:/var/lib/postgresql/data


  taskservice:
    image: taskservice:latest
    environment:
      FLASK_APP: app/__init__.py
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      DATABASE_HOST: taskdb
      DATABASE_PORT: 5432
      DATABASE_NAME: taskdatabase
    volumes:
      - ./public_key.pem:/app/public_key.pem
    deploy:
      replicas: 2
      labels:
        - "traefik.http.routers.taskservice.rule=PathPrefix(`/task/`)"
        - "traefik.http.services.taskservice.loadbalancer.server.port=5002"

  taskdb:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskdatabase
    volumes:
      - taskdb_data:/var/lib/postgresql/data

  frontend:
    image: frontend:latest
    deploy:
      replicas: 2
      labels:
        - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
        - "traefik.http.services.frontend.loadbalancer.server.port=3000"

volumes:
  userdb_data:
  taskdb_data:
